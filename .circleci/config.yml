version: 2.1

workflows:
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - gh-pages
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

executors:
  docker-executor:
    docker:
      - image: ubuntu:latest
    resource_class: small

commands:
  install_packages:
    parameters:
      packages:
        type: string
    steps:
      - run:
          name: Install Dependencies
          command: |
            apt-get update
            apt-get install -y <<parameters.packages>>

  determine_mdbook_version:
    description: Determine and save the latest mdbook version
    steps:
      - run:
          name: Get mdbook version
          command: |
            MDBOOK_VERSION=$(curl -s https://api.github.com/repos/rust-lang/mdBook/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')
            echo "$MDBOOK_VERSION" > mdbook-version.txt

  restore_mdbook_cache:
    description: Restore the mdbook cache
    steps:
      - restore_cache:
          keys:
            - mdbook-cache-{{ checksum "mdbook-version.txt" }}

  save_mdbook_cache:
    description: Cache the mdbook binary
    steps:
      - save_cache:
          key: mdbook-cache-{{ checksum "mdbook-version.txt" }}
          paths:
            - /usr/local/bin/mdbook

  install_mdbook:
    description: Install mdbook if not already present
    steps:
      - run:
          name: Install mdbook
          command: |
            if [ ! -f /usr/local/bin/mdbook ]; then
              MDBOOK_VERSION=$(cat mdbook-version.txt)
              curl -L -o /tmp/mdbook.tar.gz "https://github.com/rust-lang/mdBook/releases/download/${MDBOOK_VERSION}/mdbook-${MDBOOK_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
              tar -xzf /tmp/mdbook.tar.gz -C /tmp
              mv /tmp/mdbook /usr/local/bin/mdbook
              chmod +x /usr/local/bin/mdbook
            fi

jobs:
  build:
    executor: docker-executor
    steps:
      - install_packages:
          packages: "curl git unzip"
      - checkout
      - determine_mdbook_version
      - restore_mdbook_cache
      - install_mdbook
      - save_mdbook_cache
      - run:
          name: MDBook version
          command: mdbook -V
      - run:
          name: Build with mdbook
          command: mdbook build
      - run:
          name: Test mdbook build output
          command: test -f book/index.html
      - persist_to_workspace:
          root: .
          paths:
            - book
            - .circleci

  deploy:
    executor: docker-executor
    environment:
      TARGET_BRANCH: gh-pages
    steps:
      - install_packages:
          packages: "git"
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "SHA256:+3Hbm7FdF1sOj2CoqXoNsvBcPo+eBLK9y9JYTliDD3E"
      - run:
          name: Add GitHub to known_hosts
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Setup Git user
          command: sh ./.circleci/setup_user.sh $USER_EMAIL $USER_NAME
      - run:
          name: Prepare deployment
          command: |
            git clone --branch ${TARGET_BRANCH} --single-branch ${CIRCLE_REPOSITORY_URL} deploy
            cd deploy
            git rm -rf .
            cp -r ../book/* .
      - run:
          name: Deploy release
          command: |
            cd deploy
            sh ../.circleci/deploy.sh $TARGET_BRANCH $CIRCLE_SHA1
